getwd()
setwd("~/Documents/RMarkdown website")
setwd("~/Documents/RM_website")
rmarkdown::render_site()
setwd("~/Documents/RM_website")
rmarkdown::render_site()
setwd("~/Documents/RM_website")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/Work/Manuscripts/MS2/model-selection")
# warnings on/off
oldw <- getOption("warn")
options(warn = -1)
knitr::opts_chunk$set(echo = TRUE, warnings=FALSE)
library(ggplot2)
library(readxl)
library(gridExtra)
library(grid)
library(scales)
library(gsubfn)
dat <- read.csv("model_data2.csv")
# Create a second dataframe with complete cases only
dat.m <- na.omit(dat)
dat.m$hab.cat.b <- factor(dat.m$hab.cat.b)
names(dat)
plot(dat[,c("ma_range", "mni_max", "spec_max", "lat_range", "gcd", "grid_cells", "bodysize",
"mean_lat", "min_lat", "habitat_width", "noo")])
boxplot(ma_range~hab.cat.b, dat, las=2)
boxplot(ma_range~habitat_width, dat)
tapply(dat$ma_range, factor(dat$habitat_width), psych::describe)
pairwise.wilcox.test(dat$ma_range, factor(dat$habitat_width), p.adjust.method = "fdr")
table(dat$habitat_width)
# No singletons:
dat_ns <- dat[dat$ma_range>0,]
dat_ns <- droplevels(dat_ns)
boxplot(ma_range~habitat_width, dat_ns)
tapply(dat_ns$ma_range, factor(dat_ns$habitat_width), psych::describe)
kruskal.test(dat_ns$ma_range, factor(dat_ns$habitat_width))
pairwise.wilcox.test(dat_ns$ma_range, factor(dat_ns$habitat_width), p.adjust.method = "fdr")
table(dat_ns$habitat_width)
# Number of occurrences correlates with habitat width?
cor.test(dat$noo, dat$habitat_width, method="spearman")
boxplot(noo~habitat_width, dat)
kruskal.test(noo~habitat_width, dat)
pairwise.wilcox.test(dat$noo, dat$habitat_width, p.adjust.method = "fdr")
boxplot(bodysize~habitat_width, dat)
kruskal.test(bodysize~habitat_width, dat)
boxplot(bodysize~grid_cells, dat, varwidth=TRUE)
kruskal.test(bodysize~grid_cells, dat)
kruskal.test(bodysize~grid_cells, dat_ns)
hist(dat$mean_lat, breaks=20)
table(dat$mean_lat>0)/nrow(dat)
boxplot(mean_lat~habitat_width, dat)
cor.test(dat$mean_lat, dat$habitat_width, method="spearman")
kruskal.test(dat$mean_lat, dat$habitat_width)
pairwise.wilcox.test(dat$mean_lat, dat$habitat_width, p.adjust.method = "fdr")
boxplot(mean_lat~grid_cells, dat, varwidth=TRUE)
cor.test(dat$mean_lat, dat$grid_cells, method="spearman")
kruskal.test(mean_lat~grid_cells, dat)
kruskal.test(mean_lat~grid_cells, dat_ns)
stat <- c()
p.stat <- c()
south <- dat[dat$mean_lat<0,]
north <- dat[dat$mean_lat>=0,]
for(i in 1:1000){
temp.n <- north[sample(c(1:nrow(north)), nrow(south)),]
temp <- rbind(temp.n, south)
res <- cor.test(temp$mean_lat, temp$habitat_width, method="spearman")
stat <- c(stat, res$estimate[[1]])
p.stat <- c(p.stat, res$p.value[[1]])
i <- i+1
}
hist(stat, breaks=20)
abline(v=cor.test(dat$mean_lat, dat$habitat_width, method="spearman")$estimate[[1]], col="red")
shapiro.test(stat) # no normal distirbution, but come on....
abline(v=psych::describe(stat)$median+2*psych::describe(stat)$mad, lty=2, col="grey")
abline(v=psych::describe(stat)$median-2*psych::describe(stat)$mad, lty=2, col="grey")
psych::describe(stat)
hist(log(p.stat), breaks=20)
abline(v=log(0.05), col="red")
table(p.stat>=0.05)/length(p.stat)
stat_grid <- c()
p.stat_grid <- c()
south <- dat[dat$mean_lat<0,]
north <- dat[dat$mean_lat>=0,]
for(i in 1:1000){
temp.n <- north[sample(c(1:nrow(north)), nrow(south)),]
temp <- rbind(temp.n, south)
res <- cor.test(temp$mean_lat, temp$grid_cells, method="spearman")
stat_grid <- c(stat_grid, res$estimate[[1]])
p.stat_grid <- c(p.stat_grid, res$p.value[[1]])
i <- i+1
}
hist(stat_grid, breaks=20)
abline(v=cor.test(dat$mean_lat, dat$grid_cells, method="spearman")$estimate[[1]], col="red")
shapiro.test(stat_grid)
abline(v=psych::describe(stat_grid)$median+2*psych::describe(stat_grid)$mad, lty=2, col="grey")
abline(v=psych::describe(stat_grid)$median-2*psych::describe(stat_grid)$mad, lty=2, col="grey")
psych::describe(stat_grid)
hist(log(p.stat_grid), breaks=20)
abline(v=log(0.05), col="red")
table(p.stat_grid>=0.05)/length(p.stat_grid)
cor.test(abs(south$mean_lat), south$grid_cells, method="spearman")
cor.test(abs(north$mean_lat), north$grid_cells, method="spearman")
getwd()
setwd("~/Documents/rmarkdown-website")
rmarkdown::render_site()
??"negative binomial"
dnbinom(5, 10, prob, mu, log = FALSE)
dnbinom(5, 10, 0.6, 3, log = FALSE)
dnbinom(5, 10, prob=0.6, mu=3, log = FALSE)
x1 <- rnbinom(500, mu = 4, size = 1)
x1
plot(x1)
hist(x1)
sigma = 0.6
mu = 2
x = seq(-10, 60, length.out = 500)
Z = dlnorm(x, mu, sigma)
plot(x, Z, type = "l")
?dlnorm
getwd()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/Documents/Eryops1.github.io")
rmarkdown::render_site()
rmarkdown::render_site()
